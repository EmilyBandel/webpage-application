{"version":3,"sources":["logo.svg","img/BullyMasked.png","img/NerdyMasked.png","img/FancyMasked.png","img/StunningMasked.png","inkstain.svg","Navigation.js","Landing.js","Filmography.js","App.js","Profile.js","Contact.js","Footer.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","reactstrap_es","className","expand","onClick","navbar","Component","Landing","Images","BullyMasked","NerdyMasked","FancyMasked","StunningMasked","current","length","setCurrentImg","defaultCurrent","num","getImgNumSize","toString","headerPhoto","src","getCurrentImg","alt","nextButton","src_Navigation","xs","Filmography","App","src_Landing_0","src_Filmography","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39fc5b82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/BullyMasked.e73211c1.png\";","module.exports = __webpack_public_path__ + \"static/media/NerdyMasked.6ad9a9fe.png\";","module.exports = __webpack_public_path__ + \"static/media/FancyMasked.3ad87420.png\";","module.exports = __webpack_public_path__ + \"static/media/StunningMasked.f3ad1a30.png\";","module.exports = __webpack_public_path__ + \"static/media/inkstain.ad2f2aa9.svg\";","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem } from 'reactstrap';\r\n\r\nclass Navigation extends Component {\r\n  constructor(props) {\r\n  super(props);\r\n\r\n  this.toggle = this.toggle.bind(this);\r\n  this.state = {\r\n    isOpen: false\r\n  };\r\n}\r\ntoggle() {\r\n  this.setState({\r\n    isOpen: !this.state.isOpen\r\n  });\r\n}\r\n\r\nrender() {\r\n    return (\r\n      <div>\r\n        <Navbar className='navigate' expand=\"xs\">\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink><span  className=\"Navigationcss\">Profile</span></NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink ><span className=\"Navigationcss\" >Contact</span></NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from 'react';\r\nimport Navigation from './Navigation';\r\nimport './Landing.css';\r\nimport './App.css';\r\nimport './inkstain.svg';\r\nimport BullyMasked from './img/BullyMasked.png';\r\nimport NerdyMasked from './img/NerdyMasked.png';\r\nimport FancyMasked from './img/FancyMasked.png';\r\nimport StunningMasked from './img/StunningMasked.png';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nclass Landing extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = { Images:[\r\n      BullyMasked,\r\n      NerdyMasked,\r\n      FancyMasked,\r\n      StunningMasked\r\n    ],\r\n    current: 0\r\n    };\r\n  };\r\n  getImgNumSize(props){\r\n      var imgNum = this.state.Images.length;\r\n      return imgNum;\r\n    };\r\n  getCurrentImg(props){\r\n    return this.setCurrentImg();\r\n  };\r\n  setCurrentImg(props){\r\n    //checking to see if the current value is that of first element in the array\r\n    var defaultCurrent = this.state.current;\r\n    var num = this.getImgNumSize()-this.getImgNumSize();\r\n    if (defaultCurrent === num ){\r\n      return this.state.Images[num].toString();\r\n    }\r\n  };\r\n  handleNext(props){\r\n\r\n  };\r\n  render() {\r\n    //generating local variables for use in landing....\r\n    var name = \"Emily Bandel\";\r\n    var title = \"Actress\";\r\n    var exploreBtntxt = \"Explore\"\r\n    var city = \"Vancouver\";\r\n    var province = \"BC\";\r\n    let headerPhoto = <img className=\"EmilyBandelImg\" src={this.getCurrentImg()} alt={name+this.getCurrentImg()}/>\r\n    let nextButton = <div className=\"taverseCarouselbtn\" onClick={this.setCurrentImg()} alt=\"Next Image\"></div>\r\n\r\n    return (\r\n     <div className=\"inkstain\">\r\n      <Navigation />\r\n      <Row className=\"herotitle\">\r\n      <Col xs=\"4\" className=\"heroleft\">\r\n      <Container>\r\n      <h1 className=\"ebname\"><span>{name}</span></h1>\r\n      <h2 className=\"ebtitle\"><span>{title}</span></h2>\r\n      <button className=\"explore_Contributions_btn\"><h3><span>{exploreBtntxt}</span></h3></button>\r\n      </Container>\r\n      </Col>\r\n      <Col xs=\"4\">\r\n      </Col>\r\n      <Col xs=\"4\"className=\"heroright\">\r\n      <Container>\r\n      {headerPhoto}\r\n      {nextButton}\r\n      </Container>\r\n      </Col>\r\n      </Row> \r\n     <Container><Row className=\"vancouver\">\r\n      <Col xs=\"12\"><h2><span>{city}, {province}</span></h2></Col>\r\n      </Row>\r\n      </Container>\r\n      \r\n      <Container>\r\n      <Row>\r\n        <Col>\r\n        <div className=\"seperationbar\"></div>\r\n        </Col>\r\n      </Row>\r\n      </Container>\r\n     </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nclass Filmography extends Component {\r\n  render() {\r\n    return (\r\n      <p>**************************************</p>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filmography;\r\n","import React, { Component } from 'react';\nimport inkstain from './inkstain.svg';\nimport './App.css';\nimport Navigation from './Navigation';\nimport Landing from './Landing';\nimport Filmography from './Filmography';\nimport Profile from './Profile';\nimport Contact from './Contact';\nimport Footer from './Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Landing />\n      <Filmography />\n   </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nclass Profile extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p>\r\n            Edit <code>src/App.js</code> and save to reload.\r\n          </p>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Learn React\r\n          </a>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p>\r\n            Edit <code>src/App.js</code> and save to reload.\r\n          </p>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Learn React\r\n          </a>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p>\r\n            Edit <code>src/App.js</code> and save to reload.\r\n          </p>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Learn React\r\n          </a>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}